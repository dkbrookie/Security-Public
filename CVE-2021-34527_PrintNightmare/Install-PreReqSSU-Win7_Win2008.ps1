$kb = 'KB4592510'
$osDeets = Get-WmiObject win32_operatingsystem
$osName = $osDeets.Caption
$isNotWin2008R2 = $osName -notlike 'Microsoft Windows Server 2008 R2*'
$isNotWin7 = $osName -notlike 'Microsoft Windows 7*'
$is64Bit = $osDeets.OSArchitecture -eq '64-bit'

# Only interested in 2008R2 and win7, if not one of those, exit early
if ($isNotWin2008R2 -and $isNotWin7) {
    Write-Output '!Warning: This script is not intended for this machine. This script should only run on 2008R2 and Win7 machines'
    Return
}

# 2008R2 and win7 use the same patch
If ($is64Bit) {
    $url = 'http://download.windowsupdate.com/d/msdownload/update/software/secu/2020/11/windows6.1-kb4592510-x64_2798f0d248e08c292076980d2b954e6e1f2c8f99.msu'
} Else {
    $url = 'http://download.windowsupdate.com/d/msdownload/update/software/secu/2020/11/windows6.1-kb4592510-x86_6d69f2bf51cacf9638c9fc9b24502b4380b4f677.msu'
}

# If the patch is already installed
If (Get-HotFix -Id $kb -EA 0) {
    # Nothing to do, patch is installed. Exit.
    Write-Output "!Success: $kb is already installed!"
    Return
} Else {
    # It's not installed. Let's install it.
    $patchDir = "$env:windir\LTSvc\Patching"

    If (!(Test-Path -Path $patchDir -PathType Container)) {
        New-Item $patchDir -ItemType Directory | Out-Null
    }

    Write-Output "Detected $($kb) is not installed. Downloading $($kb)..."

    Try {
        # Download the patch
        [Net.ServicePointManager]::SecurityProtocol = [Enum]::ToObject([Net.SecurityProtocolType], 3072)
        (New-Object System.Net.WebClient).DownloadFile($url,"$patchDir\$kb.msu")
    } Catch {
        # The patch failed to download. Exit early, don't want to try to install it.
        Write-Output "!Failed: $url - There was an error downloading the file - $Error"
        Return
    }

    Try {
        # Install the patch
        Write-Output "Installing $($kb)..."
        Start-Process -FilePath wusa.exe -ArgumentList """$patchDir\$kb.msu"" /quiet /norestart /log:""$patchDir\$($kb)-InstallLog.evt""" -Wait
    } Catch {
        # The patch failed to install
        Write-Output "!Failed: There was an error installing the file - $Error"
    }

    # Clean up downloaded patch
    Remove-Item -Path "$patchDir\$kb.msu" -Force

    # Check to make sure patch was installed.
    If (Get-HotFix -Id $kb -EA 0) {
        Write-Output "!Success: $kb was installed successfully."
    } Else {
        # Patch should be here but is still missing
        Write-Output "!Failed: Installing patch failed."
    }
}
