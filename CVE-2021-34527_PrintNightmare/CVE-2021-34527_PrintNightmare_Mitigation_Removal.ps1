<#
    CVE-2021-34527 PrintNightmare Mitigation Removal

    This script REMOVES the mitigation for this vulnerability. This script exists because there will be some legitimate reasons to temporily remove
    this restriction. ALSO: once Microsoft releases a patch for this vulnerability, this mitigation should probably be undone. THIS IS TEMPORARY.

    https://blog.truesec.com/2021/06/30/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available/

    While we still recommend that the print spooler service should be disabled on any system that does not need it, we also want to provide a temporary
    workaround to make the exploit ineffective, while allowing you to keep your print servers running, until a patch is available.

    The exploit works by dropping a DLL in a subdirectory under C:\Windows\System32\spool\drivers

    By restricting the ACLs on this directory (and subdirectories) we can prevent malicious DLLs to be introduced by the print spooler service.

    At the moment, we are not aware of any way to force the DLL to be dropped in a different location.

    This will add a Deny rule for the print drivers directory and all subdirectories, preventing the SYSTEM account from modifying its contents.

    If administrators need to perform configuration changes that require the service to write in these directories, this rule can temporarily be removed,
    and re-added after the change via CVE-2021-34527_PrintNightmare_Mitigation_Removal.ps1
#>

$Path = "C:\Windows\System32\spool\drivers"

# Needs testing. Throws error in some cases. I think just in powershell 7? Alternative would be `$Acl = Get-Acl $Path`
$Acl = (Get-Item $Path).GetAccessControl('Access')

$Ar = New-Object System.Security.AccessControl.FileSystemAccessRule("System", "Modify", "ContainerInherit, ObjectInherit", "None", "Deny")

$Acl.RemoveAccessRule($Ar)

Set-Acl $Path $Acl
